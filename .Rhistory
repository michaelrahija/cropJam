gsub(pattern = "[Aa-zZ]+ \s", "", names)
gsub(pattern = "[Aa-zZ]+ \\s", "", names)
gsub(pattern = "[Aa-Zz]+ \s", "", names)
gsub(pattern = "[Aa-Zz]+ \\s", "", names)
gsub(pattern = "[Aa-Zz]+ ", "", names)
gsub(pattern = "[aA-Zz]+ ", "", names)
gsub(pattern = "[aA-Zz]+  ", "", names)
gsub(pattern = "[aA-Zz]+\s  ", "", names)
gsub(pattern = "^[aA-Zz]+ ", "", names)
gsub(pattern = "^[aA-Zz]+ \\s", "", names)
class(names)
gsub(pattern = "^[Aa-Zz]+ \\s", "", names)
gsub(pattern = "^[Aa-Zz]+\\s", "", names)
gsub(pattern = "^[A-Za-z]+\\s", "", names)
gsub(pattern = "\s  [A-Za-z]+", names)
gsub(pattern = "\\s  [A-Za-z]+", names)
gsub(pattern = "\\s  [A-Za-z]+","", names)
gsub(pattern = "\s  [A-Za-z]+", names)
names = gsub(pattern = "^[A-Za-z]+\\s", "", names)
names
gsub(pattern = "\s  [A-Za-z]+", names)
gsub(pattern = "  [A-Za-z]+", names)
gsub(pattern = "  [A-Za-z]+", "",names)
gsub(pattern = "//s [A-Za-z]+", "",names)
gsub(pattern = "//s[A-Za-z]+", "",names)
gsub(pattern = "\\s[A-Za-z]+", "",names)
Sys.info()
Sys.info$machine
Sys.info()[5] == "x86_64"
setwd("~/Dropbox/CROP/Jamaica/cropJam")
if(Sys.info()[5] == "x86_64"{
setwd("~/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "~/Dropbox/CROP/Jamaica/data_area/"
} else {
setwd("C:/Users/Rahija/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "C:/Users/Rahija/Dropbox/CROP/Jamaica/data_area/"
}
if(Sys.info()[5] == "x86_64"){
setwd("~/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "~/Dropbox/CROP/Jamaica/data_area/"
} else {
setwd("C:/Users/Rahija/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "C:/Users/Rahija/Dropbox/CROP/Jamaica/data_area/"
}
data.files <- list.files(data.dir, pattern = ".tab")
library(dplyr)
library(reshape)
if(Sys.info()[5] == "x86_64"){
setwd("~/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "~/Dropbox/CROP/Jamaica/data_area/"
} else {
setwd("C:/Users/Rahija/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "C:/Users/Rahija/Dropbox/CROP/Jamaica/data_area/"
}
#grab list of files
data.files <- list.files(data.dir, pattern = ".tab")
#read in files in order, and merge
farmer <- read.delim(paste0(data.dir,data.files[[1]]),
header = TRUE,
sep = "\t")
colnames(farmer)[1] <- "farm_id"
parcel <- read.delim(paste0(data.dir,data.files[[7]]),
header = TRUE,
sep = "\t")
colnames(parcel)[length(colnames(parcel))] <- "farm_id"
colnames(parcel)[1] <- "parcel_id"
master <- merge(farmer, parcel, by = "farm_id")
crop <- read.delim(paste0(data.dir,data.files[[2]]),
header = TRUE,
sep = "\t")
colnames(crop)[1] <- "crop_id"
colnames(crop)[length(colnames(crop))] <- "farm_id"
colnames(crop)[length(colnames(crop))-1] <- "parcel_id"
master <- merge(master, crop, by = c("farm_id", "parcel_id"))
master <- arrange(master, farm_id, parcel_id, crop_id)
head(master)
colnames(master)
###################################
## CONFIGURE AND CREATE DATASET  ##
###################################
#set wd
if(Sys.info()[5] == "x86_64"){
setwd("~/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "~/Dropbox/CROP/Jamaica/data_area/"
} else {
setwd("C:/Users/Rahija/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "C:/Users/Rahija/Dropbox/CROP/Jamaica/data_area/"
}
#grab list of files
data.files <- list.files(data.dir, pattern = ".tab")
#read in files in order, and merge
farmer <- read.delim(paste0(data.dir,data.files[[1]]),
header = TRUE,
sep = "\t")
colnames(farmer)[1] <- "farm_id"
parcel <- read.delim(paste0(data.dir,data.files[[7]]),
header = TRUE,
sep = "\t")
colnames(parcel)[length(colnames(parcel))] <- "farm_id"
colnames(parcel)[1] <- "parcel_id"
master <- merge(farmer, parcel, by = "farm_id")
crop <- read.delim(paste0(data.dir,data.files[[2]]),
header = TRUE,
sep = "\t")
colnames(crop)[1] <- "crop_id"
colnames(crop)[length(colnames(crop))] <- "farm_id"
colnames(crop)[length(colnames(crop))-1] <- "parcel_id"
master <- merge(master, crop, by = c("farm_id", "parcel_id"))
master <- arrange(master, farm_id, parcel_id, crop_id)
colnames(master)
gps <- select(master, gps_loc_1st_3_Accuracy,gps_loc_2nd_3_Accuracy)
gps
###################################
## CONFIGURE AND CREATE DATASET  ##
###################################
#set wd
if(Sys.info()[5] == "x86_64"){
setwd("~/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "~/Dropbox/CROP/Jamaica/data_area/"
} else {
setwd("C:/Users/Rahija/Dropbox/CROP/Jamaica/cropJam")
data.dir <- "C:/Users/Rahija/Dropbox/CROP/Jamaica/data_area/"
}
#grab list of files
data.files <- list.files(data.dir, pattern = ".tab")
#read in files in order, and merge
farmer <- read.delim(paste0(data.dir,data.files[[1]]),
header = TRUE,
sep = "\t")
colnames(farmer)[1] <- "farm_id"
parcel <- read.delim(paste0(data.dir,data.files[[7]]),
header = TRUE,
sep = "\t")
colnames(parcel)[length(colnames(parcel))] <- "farm_id"
colnames(parcel)[1] <- "parcel_id"
master <- merge(farmer, parcel, by = "farm_id", all = TRUE)
crop <- read.delim(paste0(data.dir,data.files[[2]]),
header = TRUE,
sep = "\t")
colnames(crop)[1] <- "crop_id"
colnames(crop)[length(colnames(crop))] <- "farm_id"
colnames(crop)[length(colnames(crop))-1] <- "parcel_id"
master <- merge(master, crop, by = c("farm_id", "parcel_id"), all = TRUE)
master <- arrange(master, farm_id, parcel_id, crop_id)
head(master)
gps <- select(master, farm_id,gps_loc_1st_3_Accuracy,gps_loc_2nd_3_Accuracy)
nrow(gps)
nrow(unique(gps))
gps <- unique(gps)
gps
library(tidyr)
gps <- gather(gps, "measure")
?gps
?gather
head(master)
gps <- select(master, farm_id,gps_loc_1st_3_Accuracy,gps_loc_2nd_3_Accuracy)
gps <- unique(gps)
gps.test <- gather(data = gps, measure)
gps.test
gps <- select(master, farm_id,gps_loc_1st_3_Accuracy,gps_loc_2nd_3_Accuracy)
gps <- unique(gps)
gps
head(gps.test)
head(master)
gps <- select(master, farm_id,gps_loc_1st_3_Accuracy,gps_loc_2nd_3_Accuracy)
gps <- unique(gps)
gps.test <- gather(data = gps, measure)
head(gps.test)
tail(gps.test)
head(gps)
gps %>% gather(measure, accuracy, gps_loc_1st_3_Accuracy:gps_loc_2nd_3_Accuracy)
x <- gps %>% gather(measure, accuracy, gps_loc_1st_3_Accuracy:gps_loc_2nd_3_Accuracy)
head(x)
tail(x)
unique(x$measure)
filter(master, farm_id == "006a0dc2894d4f2c9397f08aa5b5cb94")
x <- arrange(x, farm_id)
head(X)
head(x)
nrow(gps)
nrow(x)
gps <- select(master, farm_id,gps_loc_1st_3_Accuracy,gps_loc_2nd_3_Accuracy)
gps <- unique(gps)
x <- gps %>% gather(measure, accuracy, gps_loc_1st_3_Accuracy:gps_loc_2nd_3_Accuracy)
nrow(gps)
head(X)
head(x)
filter(master, farm_id = " 006a0dc2894d4f2c9397f08aa5b5cb94")
filter(master, farm_id = "006a0dc2894d4f2c9397f08aa5b5cb94")
filter(master, farm_id == "006a0dc2894d4f2c9397f08aa5b5cb94")
filter(gps, farm_id == "006a0dc2894d4f2c9397f08aa5b5cb94")
head(master)
gps <- select(master,
farm_id,parcel_id,
gps_loc_1st_3_Accuracy,
gps_loc_2nd_3_Accuracy)
gps <- unique(gps)
nrow(gps)
gps <- select(master,
farm_id,parcel_id,
gps_loc_1st_3_Accuracy,
gps_loc_2nd_3_Accuracy)
gps <- unique(gps)
x <- gps %>%
gather(measure,
accuracy,
gps_loc_1st_3_Accuracy:gps_loc_2nd_3_Accuracy)
head(x)
tail(X)
tail(x)
ggplot(gps,aes(x=measure)) +
geom_histogram(data=subset(gps,measure == 'gps_loc_1st_3_Accuracy'),
fill = "red", alpha = 0.2) +
geom_histogram(data=subset(gps,measure == 'gps_loc_2nd_3_Accuracy'),
fill = "green", alpha = 0.2)
library(ggplot2)
ggplot(gps,aes(x=measure)) +
geom_histogram(data=subset(gps,measure == 'gps_loc_1st_3_Accuracy'),
fill = "red", alpha = 0.2) +
geom_histogram(data=subset(gps,measure == 'gps_loc_2nd_3_Accuracy'),
fill = "green", alpha = 0.2)
ggplot(x,aes(x=measure)) +
geom_histogram(data=subset(gps,measure == 'gps_loc_1st_3_Accuracy'),
fill = "red", alpha = 0.2) +
geom_histogram(data=subset(gps,measure == 'gps_loc_2nd_3_Accuracy'),
fill = "green", alpha = 0.2)
x$measure
colnames(x)
ggplot(x,aes(x=accuracy)) +
geom_histogram(data=subset(gps,measure == 'gps_loc_1st_3_Accuracy'),
fill = "red", alpha = 0.2) +
geom_histogram(data=subset(gps,measure == 'gps_loc_2nd_3_Accuracy'),
fill = "green", alpha = 0.2)
ggplot(x,aes(x=accuracy)) +
geom_histogram(data=subset(x,measure == 'gps_loc_1st_3_Accuracy'),
fill = "red", alpha = 0.2) +
geom_histogram(data=subset(x,measure == 'gps_loc_2nd_3_Accuracy'),
fill = "green", alpha = 0.2)
?ecdf
ecdf(x$accuracy)
test <- ecdf(x$accuracy)
test
as.numeric(test)
mydf = data.frame(
a = rnorm(100, 0, 1),
b = rnorm(100, 2, 1),
c = rnorm(100, -2, 0.5)
)
mydf
mydf_m = melt(mydf)
mydf_m
colnames(mydf_m)
colnames(x)
ggplot(x,aes(x=accuracy)) +
stat_ecdf(aes(group = measure, colour = measure))
unique(x$accuracy)
ggplot(x,aes(x=accuracy)) +
geom_density(aes(group = measure, colour = measure))
?mean
mean(x$gps_loc_1st_3_Accuracy,  na.rm = TRUE)
mean(x$accuracy[x$measure == "gps_loc_2nd_3_Accuracy"],na.rm = TRUE)
if(x$gps_loc_1st_3_Accuracy > x$gps_loc_1st_3_Accuracy){
x$gps_Accuracy <- x$gps_loc_1st_3_Accuracy
} else {
data$gps_Accuracy <- x$gps_loc_2nd_3_Accuracy
}
ggplot(x, aes(x = gps_Accuracy)) + geom_density()
head(x)
if(gps$gps_loc_1st_3_Accuracy > gps$gps_loc_1st_3_Accuracy){
gps$gps_Accuracy <- gps$gps_loc_1st_3_Accuracy
} else {
gps$gps_Accuracy <- gps$gps_loc_2nd_3_Accuracy
}
ggplot(gps, aes(x = gps_Accuracy)) + geom_density()
quantile(gps$gps_Accuracy, probs = seq(0,1,.2))
quantile(gps$gps_Accuracy, probs = seq(0,1,.2), na.rm = TRUE)
quantile(gps$gps_Accuracy, probs = seq(0,1,.1), na.rm = TRUE)
quantile(gps$gps_Accuracy, probs = seq(0,1,.05), na.rm = TRUE)
temp <- filter(gps, gps_Accuracy >= 37.5)
ggplot(temp, aes(x = gps_Accuracy)) + geom_density()
quantile(gps$gps_Accuracy, probs = seq(0,1,.05), na.rm = TRUE)
temp <- filter(gps, gps_Accuracy <= 37.5)
ggplot(temp, aes(x = gps_Accuracy)) + geom_density()
colnames(master)
area <- select(master,
farm_id,parcel_id,
parcel_area_inquiry_3,
area_parcel_gps1_3,
area_parcel_gps2_3)
area <- select(master,
farm_id,parcel_id,
parcel_area_inquiry_3,
area_parcel_gps1_3,
area_parcel_gps2_3)
area
area <- filter(area, !is.na(area_parcel_gps1_3))
nrow(area)
colnames(area)
area.m <- area %>%
gather(measure,
accuracy,
parcel_area_inquiry_3:area_parcel_gps2_3)
head(area.m)
ggplot(area.m, aes(x = accuracy)) + geom_density(aes(group = measure, colour = measure))
ggplot(area.m, aes(x = accuracy)) +
geom_density(aes(group = measure, colour = measure, fill = measure))
ggplot(area.m, aes(x = accuracy)) +
geom_density(aes(group = measure, colour = measure, fill = measure), alpha = .2)
library(ggmap)
geocode(location = "Bangladesh Agricultural Research Council")
geocode(location = "Ethiopian Agricultural Research Institute")
library(rvest)
#this is the url containing our urls
urlcaps <- "http://www.asti.cgiar.org/focal-points"
#read the page as html into R using the rvest package by Sir HW
htmlcaps <- html(urlcaps)
#use the selector gadget to figure out the css (http://selectorgadget.com/)
caps <- html_nodes(htmlcaps,
"strong")
caps
inst <- html_nodes(htmlcaps,
"strong")
inst <- as.character(inst)
head(inst)
inst <- gsub(".+>","",inst)
inst
#use the selector gadget to figure out the css (http://selectorgadget.com/)
inst <- html_nodes(htmlcaps,
"strong")
inst <- as.character(inst)
inst
gsub(".+ \\>","",inst)
html_test(inst)
html_text(inst)
inst <- html_nodes(htmlcaps,
"strong")
html_text(inst)
inst<- gsub("( .+","",inst)
gsub("\\( .+","",inst)
urlcaps <- "http://www.asti.cgiar.org/focal-points"
#read the page as html into R using the rvest package by Sir HW
htmlcaps <- html(urlcaps)
#use the selector gadget to figure out the css (http://selectorgadget.com/)
inst <- html_nodes(htmlcaps,
"strong")
#inst <- as.character(inst)
inst <- html_text(inst)
gsub("\\( .+","",inst)
gsub("\( .+","",inst)
gsub(" ( .+","",inst)
gsub("\(.+","",inst)
gsub("\( .+","",inst)
inst
gsub("\\( .+","",inst)
gsub(" \\( .+","",inst)
appdn
?append
a <- list()
for(i in 1:length(inst)){
temp <- geocode(inst[i])
a <- append(a,temp)
}
a
head(a)
head(inst)
tail(a)
geocode("Institut National de Recherche Agricole du Bénin (INRAB)")
geocode("Institut National de Recherche Agricole du Bénin")
geocode("Institut National de Recherche Agricole du Benin")
geocode("Institut National de Recherche Agricole du Benin", source = "google")
inst
geocode("Instituto de Investigación Agropecuaria de Panamá")
geocode("Instituto Nacional de Investigación Agropecuaria  (INIA)")
geocode("Central Arid Zone Research Institute")
geocode("Central Arid Zone Research Institute", source = "google")
geocode("National Bureau of Plant Genetic Resources", source = "google")
geocode("National Bureau of Plant Genetic Resources, Jodpur", source = "google")
geocode("National Bureau of Plant Genetic Resources, Jodpur", source = "dks")
?geocode
geocode("National Bureau of Plant Genetic Resources, Jodpur", source = "dsk")
geocode("National Bureau of Plant Genetic Resources, Delhi", source = "dsk")
geocode("National Bureau of Plant Genetic Resources, Delhi", source = "google")
geocode("National Bureau of Plant Genetic Resources, Pusa - 110012
New Delhi
India", source = "google")
test <- html("http://www.asti.cgiar.org/india/directory")
head(test)
test(test)
tail(test)
str(test)
x <- html_nodes(test)
?html_nodes
x
x <- html_nodes(test)
head(test)
str(test)
library(rvest)
#this is the url containing our urls
urlcaps <- "http://www.asti.cgiar.org/focal-points"
#read the page as html into R using the rvest package by Sir HW
htmlcaps <- html(urlcaps)
#use the selector gadget to figure out the css (http://selectorgadget.com/)
inst <- html_nodes(htmlcaps,
"strong")
#inst <- as.character(inst)
inst <- html_text(inst)
inst<- gsub(" \\( .+","",inst)
#this is the url containing our urls
urlcaps <- "http://www.asti.cgiar.org/focal-points"
#read the page as html into R using the rvest package by Sir HW
htmlcaps <- html(urlcaps)
#use the selector gadget to figure out the css (http://selectorgadget.com/)
inst <- html_nodes(htmlcaps,
"strong")
#inst <- as.character(inst)
inst <- html_text(inst)
inst
gsub(" \\(( .+","",inst)
gsub("\\((.*)\\)","",inst)
inst<- gsub("\\((.*)\\)","",inst)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
inst<- trim(inst)
inst
a <- data.frame(inst = NA, lon = NA, lat = NA)
a
temp <- geocode(inst[1])
temp <- geocode(inst[2])
temp <- geocode(inst[3])
temp
temp$int <- inst[3]
temp$inst <- inst[3]
a <- rbind(a, temp)
a
temp
#use the selector gadget to figure out the css (http://selectorgadget.com/)
inst <- html_nodes(htmlcaps,
"strong")
#inst <- as.character(inst)
inst <- html_text(inst)
inst<- gsub("\\((.*)\\)","",inst)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
inst<- trim(inst)
a <- data.frame(inst = NA, lon = NA, lat = NA)
temp <- geocode(inst[3])
temp$inst <- inst[3]
a <- rbind(a, temp)
a
#use the selector gadget to figure out the css (http://selectorgadget.com/)
inst <- html_nodes(htmlcaps,
"strong")
#inst <- as.character(inst)
inst <- html_text(inst)
inst<- gsub("\\((.*)\\)","",inst)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
inst<- trim(inst)
a <- data.frame(inst = NA, lon = NA, lat = NA)
for(i in 1:length(inst)){
temp <- geocode(inst[3])
temp$inst <- inst[3]
a <- rbind(a, temp)
}
a
#this is the url containing our urls
urlcaps <- "http://www.asti.cgiar.org/focal-points"
#read the page as html into R using the rvest package by Sir HW
htmlcaps <- html(urlcaps)
#use the selector gadget to figure out the css (http://selectorgadget.com/)
inst <- html_nodes(htmlcaps,
"strong")
#inst <- as.character(inst)
inst <- html_text(inst)
inst<- gsub("\\((.*)\\)","",inst)
trim <- function (x) gsub("^\\s+|\\s+$", "", x)
inst<- trim(inst)
a <- data.frame(inst = NA, lon = NA, lat = NA)
for(i in 1:length(inst)){
temp <- geocode(inst[i])
temp$inst <- inst[i]
a <- rbind(a, temp)
}
a
length(filter(a, !is.na(a)))
nrow(filter(a, !is.na(a)))
z <- filter(a, !is.na(a[,2]))
z
nrow(a)
z <- filter(a, !is.na(a[,2]))
url <- "http://www.asti.cgiar.org/india/directory"
html <- hmtl(url)
html <- html(url)
html <- read_html(url)
india <- html_nodes(html,
".views-field-title a")
india
india <- html_text(india)
india
india<- gsub("\\((.*)\\)","",india)
india<- trim(india)
india
a <- data.frame(inst = NA, lon = NA, lat = NA)
for(i in 1:length(india)){
temp <- geocode(india[i])
temp$inst <- india[i]
a <- rbind(a, temp)
}
a
rbind(z, filter(a, !is.na(a[,2])))
zz <- rbind(z, filter(a, !is.na(a[,2])))
zz
nrow(a)
nrow(zz)
nrow(filter(a, !is.na(a[,2])))
